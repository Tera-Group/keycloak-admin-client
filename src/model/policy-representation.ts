/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// May contain unused imports in some cases
// @ts-ignore
import { ResourceRepresentation } from './resource-representation';
// May contain unused imports in some cases
// @ts-ignore
import { ScopeRepresentation } from './scope-representation';

/**
 *
 * @export
 * @interface PolicyRepresentation
 */
export interface PolicyRepresentation {
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof PolicyRepresentation
   */
  config?: { [key: string]: any };
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  decisionStrategy?: PolicyRepresentationDecisionStrategyEnum;
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  logic?: PolicyRepresentationLogicEnum;
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  owner?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PolicyRepresentation
   */
  policies?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof PolicyRepresentation
   */
  resources?: Array<string>;
  /**
   *
   * @type {Array<ResourceRepresentation>}
   * @memberof PolicyRepresentation
   */
  resourcesData?: Array<ResourceRepresentation>;
  /**
   *
   * @type {Array<string>}
   * @memberof PolicyRepresentation
   */
  scopes?: Array<string>;
  /**
   *
   * @type {Array<ScopeRepresentation>}
   * @memberof PolicyRepresentation
   */
  scopesData?: Array<ScopeRepresentation>;
  /**
   *
   * @type {string}
   * @memberof PolicyRepresentation
   */
  type?: string;
}

export const PolicyRepresentationDecisionStrategyEnum = {
  Affirmative: 'AFFIRMATIVE',
  Unanimous: 'UNANIMOUS',
  Consensus: 'CONSENSUS',
} as const;

export type PolicyRepresentationDecisionStrategyEnum =
  (typeof PolicyRepresentationDecisionStrategyEnum)[keyof typeof PolicyRepresentationDecisionStrategyEnum];
export const PolicyRepresentationLogicEnum = {
  Positive: 'POSITIVE',
  Negative: 'NEGATIVE',
} as const;

export type PolicyRepresentationLogicEnum =
  (typeof PolicyRepresentationLogicEnum)[keyof typeof PolicyRepresentationLogicEnum];
