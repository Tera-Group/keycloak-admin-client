/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CredentialRepresentation } from './credentialRepresentation';
import { FederatedIdentityRepresentation } from './federatedIdentityRepresentation';
import { UserConsentRepresentation } from './userConsentRepresentation';

export class UserRepresentation {
  'access'?: { [key: string]: any };
  'attributes'?: { [key: string]: any };
  'clientConsents'?: Array<UserConsentRepresentation>;
  'clientRoles'?: { [key: string]: any };
  'createdTimestamp'?: number;
  'credentials'?: Array<CredentialRepresentation>;
  'disableableCredentialTypes'?: Array<string>;
  'email'?: string;
  'emailVerified'?: boolean;
  'enabled'?: boolean;
  'federatedIdentities'?: Array<FederatedIdentityRepresentation>;
  'federationLink'?: string;
  'firstName'?: string;
  'groups'?: Array<string>;
  'id'?: string;
  'lastName'?: string;
  'notBefore'?: number;
  'origin'?: string;
  'realmRoles'?: Array<string>;
  'requiredActions'?: Array<string>;
  'self'?: string;
  'serviceAccountClientId'?: string;
  'username'?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'access',
      baseName: 'access',
      type: '{ [key: string]: any; }',
    },
    {
      name: 'attributes',
      baseName: 'attributes',
      type: '{ [key: string]: any; }',
    },
    {
      name: 'clientConsents',
      baseName: 'clientConsents',
      type: 'Array<UserConsentRepresentation>',
    },
    {
      name: 'clientRoles',
      baseName: 'clientRoles',
      type: '{ [key: string]: any; }',
    },
    {
      name: 'createdTimestamp',
      baseName: 'createdTimestamp',
      type: 'number',
    },
    {
      name: 'credentials',
      baseName: 'credentials',
      type: 'Array<CredentialRepresentation>',
    },
    {
      name: 'disableableCredentialTypes',
      baseName: 'disableableCredentialTypes',
      type: 'Array<string>',
    },
    {
      name: 'email',
      baseName: 'email',
      type: 'string',
    },
    {
      name: 'emailVerified',
      baseName: 'emailVerified',
      type: 'boolean',
    },
    {
      name: 'enabled',
      baseName: 'enabled',
      type: 'boolean',
    },
    {
      name: 'federatedIdentities',
      baseName: 'federatedIdentities',
      type: 'Array<FederatedIdentityRepresentation>',
    },
    {
      name: 'federationLink',
      baseName: 'federationLink',
      type: 'string',
    },
    {
      name: 'firstName',
      baseName: 'firstName',
      type: 'string',
    },
    {
      name: 'groups',
      baseName: 'groups',
      type: 'Array<string>',
    },
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'lastName',
      baseName: 'lastName',
      type: 'string',
    },
    {
      name: 'notBefore',
      baseName: 'notBefore',
      type: 'number',
    },
    {
      name: 'origin',
      baseName: 'origin',
      type: 'string',
    },
    {
      name: 'realmRoles',
      baseName: 'realmRoles',
      type: 'Array<string>',
    },
    {
      name: 'requiredActions',
      baseName: 'requiredActions',
      type: 'Array<string>',
    },
    {
      name: 'self',
      baseName: 'self',
      type: 'string',
    },
    {
      name: 'serviceAccountClientId',
      baseName: 'serviceAccountClientId',
      type: 'string',
    },
    {
      name: 'username',
      baseName: 'username',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return UserRepresentation.attributeTypeMap;
  }
}
