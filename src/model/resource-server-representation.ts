/* tslint:disable */
/* eslint-disable */
/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// May contain unused imports in some cases
// @ts-ignore
import { PolicyRepresentation } from './policy-representation';
// May contain unused imports in some cases
// @ts-ignore
import { ResourceRepresentation } from './resource-representation';
// May contain unused imports in some cases
// @ts-ignore
import { ScopeRepresentation } from './scope-representation';

/**
 *
 * @export
 * @interface ResourceServerRepresentation
 */
export interface ResourceServerRepresentation {
  /**
   *
   * @type {boolean}
   * @memberof ResourceServerRepresentation
   */
  allowRemoteResourceManagement?: boolean;
  /**
   *
   * @type {string}
   * @memberof ResourceServerRepresentation
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof ResourceServerRepresentation
   */
  decisionStrategy?: ResourceServerRepresentationDecisionStrategyEnum;
  /**
   *
   * @type {string}
   * @memberof ResourceServerRepresentation
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ResourceServerRepresentation
   */
  name?: string;
  /**
   *
   * @type {Array<PolicyRepresentation>}
   * @memberof ResourceServerRepresentation
   */
  policies?: Array<PolicyRepresentation>;
  /**
   *
   * @type {string}
   * @memberof ResourceServerRepresentation
   */
  policyEnforcementMode?: ResourceServerRepresentationPolicyEnforcementModeEnum;
  /**
   *
   * @type {Array<ResourceRepresentation>}
   * @memberof ResourceServerRepresentation
   */
  resources?: Array<ResourceRepresentation>;
  /**
   *
   * @type {Array<ScopeRepresentation>}
   * @memberof ResourceServerRepresentation
   */
  scopes?: Array<ScopeRepresentation>;
}

export const ResourceServerRepresentationDecisionStrategyEnum = {
  Affirmative: 'AFFIRMATIVE',
  Unanimous: 'UNANIMOUS',
  Consensus: 'CONSENSUS',
} as const;

export type ResourceServerRepresentationDecisionStrategyEnum =
  (typeof ResourceServerRepresentationDecisionStrategyEnum)[keyof typeof ResourceServerRepresentationDecisionStrategyEnum];
export const ResourceServerRepresentationPolicyEnforcementModeEnum = {
  Enforcing: 'ENFORCING',
  Permissive: 'PERMISSIVE',
  Disabled: 'DISABLED',
} as const;

export type ResourceServerRepresentationPolicyEnforcementModeEnum =
  (typeof ResourceServerRepresentationPolicyEnforcementModeEnum)[keyof typeof ResourceServerRepresentationPolicyEnforcementModeEnum];
