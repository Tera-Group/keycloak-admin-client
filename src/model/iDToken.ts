/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AddressClaimSet } from './addressClaimSet';

export class IDToken {
  'acr'?: string;
  'address'?: AddressClaimSet;
  'atHash'?: string;
  'authTime'?: number;
  'azp'?: string;
  'birthdate'?: string;
  'cHash'?: string;
  'category'?: IDToken.CategoryEnum;
  'claimsLocales'?: string;
  'email'?: string;
  'emailVerified'?: boolean;
  'exp'?: number;
  'familyName'?: string;
  'gender'?: string;
  'givenName'?: string;
  'iat'?: number;
  'iss'?: string;
  'jti'?: string;
  'locale'?: string;
  'middleName'?: string;
  'name'?: string;
  'nbf'?: number;
  'nickname'?: string;
  'nonce'?: string;
  'otherClaims'?: { [key: string]: any };
  'phoneNumber'?: string;
  'phoneNumberVerified'?: boolean;
  'picture'?: string;
  'preferredUsername'?: string;
  'profile'?: string;
  'sHash'?: string;
  'sessionState'?: string;
  'sid'?: string;
  'sub'?: string;
  'typ'?: string;
  'updatedAt'?: number;
  'website'?: string;
  'zoneinfo'?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'acr',
      baseName: 'acr',
      type: 'string',
    },
    {
      name: 'address',
      baseName: 'address',
      type: 'AddressClaimSet',
    },
    {
      name: 'atHash',
      baseName: 'at_hash',
      type: 'string',
    },
    {
      name: 'authTime',
      baseName: 'auth_time',
      type: 'number',
    },
    {
      name: 'azp',
      baseName: 'azp',
      type: 'string',
    },
    {
      name: 'birthdate',
      baseName: 'birthdate',
      type: 'string',
    },
    {
      name: 'cHash',
      baseName: 'c_hash',
      type: 'string',
    },
    {
      name: 'category',
      baseName: 'category',
      type: 'IDToken.CategoryEnum',
    },
    {
      name: 'claimsLocales',
      baseName: 'claims_locales',
      type: 'string',
    },
    {
      name: 'email',
      baseName: 'email',
      type: 'string',
    },
    {
      name: 'emailVerified',
      baseName: 'email_verified',
      type: 'boolean',
    },
    {
      name: 'exp',
      baseName: 'exp',
      type: 'number',
    },
    {
      name: 'familyName',
      baseName: 'family_name',
      type: 'string',
    },
    {
      name: 'gender',
      baseName: 'gender',
      type: 'string',
    },
    {
      name: 'givenName',
      baseName: 'given_name',
      type: 'string',
    },
    {
      name: 'iat',
      baseName: 'iat',
      type: 'number',
    },
    {
      name: 'iss',
      baseName: 'iss',
      type: 'string',
    },
    {
      name: 'jti',
      baseName: 'jti',
      type: 'string',
    },
    {
      name: 'locale',
      baseName: 'locale',
      type: 'string',
    },
    {
      name: 'middleName',
      baseName: 'middle_name',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'nbf',
      baseName: 'nbf',
      type: 'number',
    },
    {
      name: 'nickname',
      baseName: 'nickname',
      type: 'string',
    },
    {
      name: 'nonce',
      baseName: 'nonce',
      type: 'string',
    },
    {
      name: 'otherClaims',
      baseName: 'otherClaims',
      type: '{ [key: string]: any; }',
    },
    {
      name: 'phoneNumber',
      baseName: 'phone_number',
      type: 'string',
    },
    {
      name: 'phoneNumberVerified',
      baseName: 'phone_number_verified',
      type: 'boolean',
    },
    {
      name: 'picture',
      baseName: 'picture',
      type: 'string',
    },
    {
      name: 'preferredUsername',
      baseName: 'preferred_username',
      type: 'string',
    },
    {
      name: 'profile',
      baseName: 'profile',
      type: 'string',
    },
    {
      name: 'sHash',
      baseName: 's_hash',
      type: 'string',
    },
    {
      name: 'sessionState',
      baseName: 'session_state',
      type: 'string',
    },
    {
      name: 'sid',
      baseName: 'sid',
      type: 'string',
    },
    {
      name: 'sub',
      baseName: 'sub',
      type: 'string',
    },
    {
      name: 'typ',
      baseName: 'typ',
      type: 'string',
    },
    {
      name: 'updatedAt',
      baseName: 'updated_at',
      type: 'number',
    },
    {
      name: 'website',
      baseName: 'website',
      type: 'string',
    },
    {
      name: 'zoneinfo',
      baseName: 'zoneinfo',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return IDToken.attributeTypeMap;
  }
}

export namespace IDToken {
  export enum CategoryEnum {
    Internal = <any>'INTERNAL',
    Access = <any>'ACCESS',
    Id = <any>'ID',
    Admin = <any>'ADMIN',
    Userinfo = <any>'USERINFO',
    Logout = <any>'LOGOUT',
    AuthorizationResponse = <any>'AUTHORIZATION_RESPONSE',
  }
}
