/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ResourceRepresentation } from './resourceRepresentation';
import { ScopeRepresentation } from './scopeRepresentation';

export class PolicyRepresentation {
  'config'?: { [key: string]: any };
  'decisionStrategy'?: PolicyRepresentation.DecisionStrategyEnum;
  'description'?: string;
  'id'?: string;
  'logic'?: PolicyRepresentation.LogicEnum;
  'name'?: string;
  'owner'?: string;
  'policies'?: Array<string>;
  'resources'?: Array<string>;
  'resourcesData'?: Array<ResourceRepresentation>;
  'scopes'?: Array<string>;
  'scopesData'?: Array<ScopeRepresentation>;
  'type'?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'config',
      baseName: 'config',
      type: '{ [key: string]: any; }',
    },
    {
      name: 'decisionStrategy',
      baseName: 'decisionStrategy',
      type: 'PolicyRepresentation.DecisionStrategyEnum',
    },
    {
      name: 'description',
      baseName: 'description',
      type: 'string',
    },
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'logic',
      baseName: 'logic',
      type: 'PolicyRepresentation.LogicEnum',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'owner',
      baseName: 'owner',
      type: 'string',
    },
    {
      name: 'policies',
      baseName: 'policies',
      type: 'Array<string>',
    },
    {
      name: 'resources',
      baseName: 'resources',
      type: 'Array<string>',
    },
    {
      name: 'resourcesData',
      baseName: 'resourcesData',
      type: 'Array<ResourceRepresentation>',
    },
    {
      name: 'scopes',
      baseName: 'scopes',
      type: 'Array<string>',
    },
    {
      name: 'scopesData',
      baseName: 'scopesData',
      type: 'Array<ScopeRepresentation>',
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return PolicyRepresentation.attributeTypeMap;
  }
}

export namespace PolicyRepresentation {
  export enum DecisionStrategyEnum {
    Affirmative = <any>'AFFIRMATIVE',
    Unanimous = <any>'UNANIMOUS',
    Consensus = <any>'CONSENSUS',
  }
  export enum LogicEnum {
    Positive = <any>'POSITIVE',
    Negative = <any>'NEGATIVE',
  }
}
